Elm.Random = Elm.Random || {};
Elm.Random.Maybe = Elm.Random.Maybe || {};
Elm.Random.Maybe.make = function (_elm) {
   "use strict";
   _elm.Random = _elm.Random || {};
   _elm.Random.Maybe = _elm.Random.Maybe || {};
   if (_elm.Random.Maybe.values) return _elm.Random.Maybe.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Random = Elm.Random.make(_elm),
   $Random$Extra = Elm.Random.Extra.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var withDefault = F2(function (value,generator) {    return A2($Random$Extra.map,$Maybe.withDefault(value),generator);});
   var withDefaultGenerator = F2(function ($default,generator) {    return A2($Random$Extra.flatMap,A2($Basics.flip,withDefault,generator),$default);});
   var maybe = function (generator) {
      return A2($Random$Extra.frequency,
      _U.list([{ctor: "_Tuple2",_0: 1,_1: $Random$Extra.constant($Maybe.Nothing)},{ctor: "_Tuple2",_0: 1,_1: A2($Random$Extra.map,$Maybe.Just,generator)}]),
      $Random$Extra.constant($Maybe.Nothing));
   };
   return _elm.Random.Maybe.values = {_op: _op,maybe: maybe,withDefault: withDefault,withDefaultGenerator: withDefaultGenerator};
};